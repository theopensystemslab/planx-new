version: "3.7"

# If you change anything here (e.g. environment variables) remember to cascade the change to `infrastructure/`

services:
  postgres:
    image: postgis/postgis:12-3.0-alpine
    restart: always
    ports:
      - ${PG_PORT}:5432
    volumes:
      - data:/var/lib/postgresql/data
    command: "postgres -c listen_addresses='*'"
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USERNAME}

  hasura:
    build:
      context: ./hasura.planx.uk
      dockerfile: Dockerfile
    ports:
      - ${HASURA_GRAPHQL_PORT}:8080
    depends_on:
      - postgres
    volumes:
      - "./hasura.planx.uk/metadata:/hasura-metadata"
      - "./hasura.planx.uk/migrations:/hasura-migrations"
    restart: always
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_DATABASE_URL: postgres://${PG_USERNAME}:${PG_PASSWORD}@postgres/${PG_DATABASE}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "${JWT_SECRET}" }'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"

  api:
    restart: always
    build:
      context: ./api.planx.uk
      dockerfile: Dockerfile.dev
    depends_on:
      - hasura
    volumes:
      - "./api.planx.uk:/api"
      - "/api/node_modules"
    ports:
      - ${API_PORT}:${API_PORT}
    stdin_open: true
    tty: true
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_URL: http://hasura:8080/v1/graphql
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      API_URL_EXT: ${API_URL_EXT}
      EDITOR_URL_EXT: ${EDITOR_URL_EXT}
      SESSION_SECRET: ${SESSION_SECRET}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_ACL: ${AWS_S3_ACL}
      PORT: ${API_PORT}
      BOPS_API_TOKEN: ${BOPS_API_TOKEN}
      GOV_UK_PAY_TOKEN_BUCKINGHAMSHIRE: ${GOV_UK_PAY_TOKEN_BUCKINGHAMSHIRE}
      GOV_UK_PAY_TOKEN_LAMBETH: ${GOV_UK_PAY_TOKEN_LAMBETH}
      GOV_UK_PAY_TOKEN_SOUTHWARK: ${GOV_UK_PAY_TOKEN_SOUTHWARK}

  sharedb:
    restart: always
    build:
      context: ./sharedb.planx.uk
      dockerfile: Dockerfile.dev
    volumes:
      - "./sharedb.planx.uk:/sharedb"
      - "/sharedb/node_modules"
    depends_on:
      - hasura
    ports:
      - ${SHAREDB_PORT}:8000
    stdin_open: true
    tty: true
    environment:
      JWT_SECRET: ${JWT_SECRET}
      PG_URL: postgres://${PG_USERNAME}:${PG_PASSWORD}@postgres/${PG_DATABASE}

volumes:
  data:
