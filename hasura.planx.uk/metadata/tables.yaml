- table:
    name: analytics
    schema: public
  object_relationships:
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
  insert_permissions:
    - role: public
      permission:
        check:
          flow:
            status:
              _eq: online
        columns:
          - created_at
          - flow_id
          - id
          - referrer
          - type
          - user_agent
  select_permissions:
    - role: public
      permission:
        columns:
          - id
        filter: {}
  update_permissions:
    - role: public
      permission:
        columns:
          - ended_at
        filter:
          flow:
            status:
              _eq: online
        check: null
- table:
    name: analytics_logs
    schema: public
  object_relationships:
    - name: analytic
      using:
        foreign_key_constraint_on: analytics_id
  insert_permissions:
    - role: public
      permission:
        check:
          analytic:
            flow:
              status:
                _eq: online
        columns:
          - analytics_id
          - created_at
          - flow_direction
          - has_clicked_help
          - id
          - input_errors
          - metadata
          - node_id
          - node_title
          - node_type
          - user_exit
  select_permissions:
    - role: public
      permission:
        columns:
          - analytics_id
          - created_at
          - id
          - node_id
          - user_exit
        filter: {}
  update_permissions:
    - role: public
      permission:
        columns:
          - allow_list_answers
          - flow_direction
          - has_clicked_help
          - input_errors
          - metadata
          - next_log_created_at
          - user_exit
        filter:
          analytic:
            flow:
              status:
                _eq: online
        check: null
- table:
    name: analytics_summary
    schema: public
- table:
    name: blpu_codes
    schema: public
  select_permissions:
    - role: public
      permission:
        columns:
          - description
          - code
          - value
        filter: {}
- table:
    name: bops_applications
    schema: public
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - req_headers
          - request
          - response
          - response_headers
          - bops_id
          - destination_url
          - session_id
          - created_at
          - sanitised_at
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - req_headers
          - request
          - response
          - response_headers
          - bops_id
          - destination_url
          - session_id
          - created_at
          - sanitised_at
        filter: {}
  update_permissions:
    - role: api
      permission:
        columns:
          - id
          - req_headers
          - request
          - response
          - response_headers
          - bops_id
          - destination_url
          - session_id
          - created_at
          - sanitised_at
        filter: {}
        check: {}
  event_triggers:
    - name: setup_bops_applications_notifications
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 30
        num_retries: 1
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        method: POST
        query_params:
          type: bops-submission
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/send-slack-notification'
        version: 2
- table:
    name: document_template
    schema: public
  is_enum: true
- table:
    name: email_applications
    schema: public
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - request
          - response
          - recipient
          - team_slug
          - created_at
          - sanitised_at
          - session_id
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - request
          - response
          - recipient
          - team_slug
          - created_at
          - sanitised_at
          - session_id
        filter: {}
  update_permissions:
    - role: api
      permission:
        columns:
          - id
          - request
          - response
          - recipient
          - team_slug
          - created_at
          - sanitised_at
          - session_id
        filter: {}
        check: {}
  event_triggers:
    - name: setup_email_applications_notifications
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 30
        num_retries: 1
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        method: POST
        query_params:
          type: email-submission
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/send-slack-notification'
        version: 2
- table:
    name: feedback
    schema: public
  object_relationships:
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
    - name: team
      using:
        foreign_key_constraint_on: team_id
  insert_permissions:
    - role: public
      permission:
        check: {}
        columns:
          - created_at
          - device
          - feedback_type
          - flow_id
          - id
          - node_data
          - node_id
          - node_type
          - status
          - team_id
          - user_comment
          - user_context
          - user_data
      comment: Allow users who want to leave feedback on their experience to write to the table
  select_permissions:
    - role: api
      permission:
        columns:
          - created_at
          - id
        filter: {}
      comment: ""
  delete_permissions:
    - role: api
      permission:
        filter: {}
      comment: ""
- table:
    name: feedback_status_enum
    schema: public
  is_enum: true
- table:
    name: feedback_summary
    schema: public
  object_relationships:
    - name: team
      using:
        manual_configuration:
          column_mapping:
            team_slug: slug
          insertion_order: null
          remote_table:
            name: teams
            schema: public
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - feedback_id
          - device
          - node_data
          - address
          - feedback_type
          - help_definition
          - help_sources
          - help_text
          - intersecting_constraints
          - node_id
          - node_text
          - node_title
          - node_type
          - project_type
          - service_slug
          - status
          - team_slug
          - uprn
          - user_comment
          - user_context
          - created_at
        filter: {}
      comment: ""
    - role: teamEditor
      permission:
        columns:
          - feedback_id
          - device
          - node_data
          - address
          - feedback_type
          - help_definition
          - help_sources
          - help_text
          - intersecting_constraints
          - node_id
          - node_text
          - node_title
          - node_type
          - project_type
          - service_slug
          - status
          - team_slug
          - uprn
          - user_comment
          - user_context
          - created_at
        filter:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
      comment: ""
- table:
    name: feedback_type_enum
    schema: public
  is_enum: true
- table:
    name: flow_document_templates
    schema: public
  object_relationships:
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
  select_permissions:
    - role: api
      permission:
        columns:
          - document_template
          - flow_id
        filter: {}
    - role: public
      permission:
        columns:
          - document_template
          - flow_id
        filter: {}
- table:
    name: flow_status_enum
    schema: public
  is_enum: true
- table:
    name: flow_status_history
    schema: public
- table:
    name: flows
    schema: public
  object_relationships:
    - name: creator
      using:
        foreign_key_constraint_on: creator_id
    - name: team
      using:
        foreign_key_constraint_on: team_id
  array_relationships:
    - name: document_templates
      using:
        foreign_key_constraint_on:
          column: flow_id
          table:
            name: flow_document_templates
            schema: public
    - name: operations
      using:
        foreign_key_constraint_on:
          column: flow_id
          table:
            name: operations
            schema: public
    - name: published_flows
      using:
        foreign_key_constraint_on:
          column: flow_id
          table:
            name: published_flows
            schema: public
  computed_fields:
    - name: data_merged
      definition:
        function:
          name: compile_flow_portals
          schema: public
      comment: Flow data with portals merged in
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - copied_from
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - team_id
          - updated_at
          - version
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - copied_from
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - team_id
          - updated_at
          - version
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
    - role: teamEditor
      permission:
        check:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
        columns:
          - copied_from
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - team_id
          - updated_at
          - version
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
  select_permissions:
    - role: api
      permission:
        columns:
          - copied_from
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - status
          - team_id
          - updated_at
          - version
        computed_fields:
          - data_merged
        filter: {}
        allow_aggregations: true
    - role: platformAdmin
      permission:
        columns:
          - analytics_link
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - status
          - team_id
          - updated_at
          - version
        computed_fields:
          - data_merged
        filter: {}
        allow_aggregations: true
    - role: public
      permission:
        columns:
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - status
          - team_id
          - updated_at
          - version
        computed_fields:
          - data_merged
        filter: {}
        allow_aggregations: true
    - role: teamEditor
      permission:
        columns:
          - analytics_link
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - status
          - team_id
          - updated_at
          - version
        computed_fields:
          - data_merged
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: api
      permission:
        columns:
          - copied_from
          - created_at
          - creator_id
          - data
          - id
          - name
          - settings
          - slug
          - status
          - team_id
          - updated_at
          - version
        filter: {}
        check: {}
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
    - role: platformAdmin
      permission:
        columns:
          - data
          - name
          - settings
          - slug
          - status
          - team_id
        filter: {}
        check: null
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
    - role: teamEditor
      permission:
        columns:
          - data
          - name
          - settings
          - slug
          - status
          - team_id
        filter:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
        check: null
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
  delete_permissions:
    - role: platformAdmin
      permission:
        filter: {}
    - role: teamEditor
      permission:
        filter:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
- table:
    name: global_settings
    schema: public
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - footer_content
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - footer_content
          - id
        filter: {}
    - role: public
      permission:
        columns:
          - footer_content
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - footer_content
          - id
        filter: {}
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - footer_content
          - id
        filter: {}
        check: {}
        validate_input:
          definition:
            forward_client_headers: false
            headers:
              - name: authorization
                value: '{{HASURA_PLANX_API_KEY}}'
            timeout: 10
            url: '{{HASURA_PLANX_API_URL}}/webhooks/hasura/validate-input/jsonb/clean-html'
          type: http
- table:
    name: lowcal_sessions
    schema: public
  object_relationships:
    - name: flow
      using:
        manual_configuration:
          column_mapping:
            flow_id: id
          insertion_order: null
          remote_table:
            name: flows
            schema: public
  array_relationships:
    - name: payment_requests
      using:
        foreign_key_constraint_on:
          column: session_id
          table:
            name: payment_requests
            schema: public
    - name: payment_status
      using:
        manual_configuration:
          column_mapping:
            id: session_id
          insertion_order: null
          remote_table:
            name: payment_status
            schema: public
  insert_permissions:
    - role: public
      permission:
        check:
          email:
            _eq: x-hasura-lowcal-email
        columns:
          - data
          - email
          - flow_id
          - id
  select_permissions:
    - role: api
      permission:
        columns:
          - data
          - email
          - created_at
          - deleted_at
          - locked_at
          - submitted_at
          - updated_at
          - flow_id
          - id
          - allow_list_answers
          - has_user_saved
          - sanitised_at
        filter: {}
    - role: public
      permission:
        columns:
          - created_at
          - data
          - flow_id
          - has_user_saved
          - id
          - submitted_at
          - updated_at
        filter:
          _and:
            - id:
                _eq: x-hasura-lowcal-session-id
            - email:
                _eq: x-hasura-lowcal-email
            - email:
                _neq: ""
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
  update_permissions:
    - role: api
      permission:
        columns:
          - allow_list_answers
          - created_at
          - data
          - deleted_at
          - email
          - flow_id
          - has_user_saved
          - id
          - locked_at
          - sanitised_at
          - submitted_at
          - updated_at
        filter: {}
        check: {}
    - role: public
      permission:
        columns:
          - data
          - deleted_at
        filter:
          _and:
            - id:
                _eq: x-hasura-lowcal-session-id
            - email:
                _eq: x-hasura-lowcal-email
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
            - locked_at:
                _is_null: true
        check: {}
  event_triggers:
    - name: email_user_submission_confirmation
      definition:
        enable_manual: false
        update:
          columns:
            - submitted_at
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "payload": {
                "sessionId": {{$body.event.data.new.id}},
                "email": {{$body.event.data.new.email}},
                "lockedAt": {{$body.event.data.new.locked_at}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/send-email/confirmation'
        version: 2
    - name: setup_lowcal_expiry_events
      definition:
        enable_manual: false
        update:
          columns:
            - has_user_saved
      retry_conf:
        interval_sec: 10
        num_retries: 3
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "sessionId": {{$body.event.data.new.id}},
                "email": {{$body.event.data.new.email}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/create-expiry-event'
        version: 2
    - name: setup_lowcal_reminder_events
      definition:
        enable_manual: false
        update:
          columns:
            - has_user_saved
      retry_conf:
        interval_sec: 10
        num_retries: 3
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "sessionId": {{$body.event.data.new.id}},
                "email": {{$body.event.data.new.email}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/create-reminder-event'
        version: 2
- table:
    name: operations
    schema: public
  object_relationships:
    - name: actor
      using:
        foreign_key_constraint_on: actor_id
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
    - role: teamEditor
      permission:
        check:
          flow:
            team:
              members:
                _and:
                  - user_id:
                      _eq: x-hasura-user-id
                  - role:
                      _eq: teamEditor
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - id
          - flow_id
          - version
          - actor_id
          - data
          - created_at
          - updated_at
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - id
          - flow_id
          - version
          - actor_id
          - data
          - created_at
          - updated_at
        filter: {}
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
        filter: {}
        check: {}
    - role: teamEditor
      permission:
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
        filter:
          flow:
            team:
              members:
                _and:
                  - user_id:
                      _eq: x-hasura-user-id
                  - role:
                      _eq: teamEditor
        check: {}
- table:
    name: payment_requests
    schema: public
  object_relationships:
    - name: session
      using:
        foreign_key_constraint_on: session_id
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - applicant_name
          - created_at
          - govpay_metadata
          - govpay_payment_id
          - id
          - paid_at
          - payee_email
          - payee_name
          - payment_amount
          - session_id
          - session_preview_data
  select_permissions:
    - role: api
      permission:
        columns:
          - applicant_name
          - created_at
          - govpay_metadata
          - govpay_payment_id
          - id
          - paid_at
          - payee_email
          - payee_name
          - payment_amount
          - session_id
          - session_preview_data
        filter: {}
    - role: public
      permission:
        columns:
          - applicant_name
          - created_at
          - govpay_payment_id
          - id
          - paid_at
          - payment_amount
          - session_preview_data
        filter:
          id:
            _eq: x-hasura-payment-request-id
  update_permissions:
    - role: api
      permission:
        columns:
          - applicant_name
          - created_at
          - govpay_metadata
          - govpay_payment_id
          - id
          - paid_at
          - payee_email
          - payee_name
          - payment_amount
          - session_id
          - session_preview_data
        filter: {}
        check: {}
  delete_permissions:
    - role: api
      permission:
        filter: {}
  event_triggers:
    - name: setup_payment_expiry_events
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 3
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "paymentRequestId": {{$body.event.data.new.id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/create-payment-expiry-events'
        version: 2
    - name: setup_payment_invitation_events
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 3
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "paymentRequestId": {{$body.event.data.new.id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/create-payment-invitation-events'
        version: 2
    - name: setup_payment_reminder_events
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 3
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "paymentRequestId": {{$body.event.data.new.id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/create-payment-reminder-events'
        version: 2
    - name: setup_payment_send_events
      definition:
        enable_manual: false
        update:
          columns:
            - paid_at
      retry_conf:
        interval_sec: 10
        num_retries: 3
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "sessionId": {{$body.event.data.new.session_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/create-payment-send-events'
        version: 2
- table:
    name: payment_status
    schema: public
  object_relationships:
    - name: lowcal_session
      using:
        manual_configuration:
          column_mapping:
            session_id: id
          insertion_order: null
          remote_table:
            name: lowcal_sessions
            schema: public
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - payment_id
          - status
          - team_slug
          - created_at
          - flow_id
          - session_id
          - amount
  select_permissions:
    - role: api
      permission:
        columns:
          - payment_id
          - status
          - team_slug
          - created_at
          - flow_id
          - session_id
          - amount
        filter: {}
- table:
    name: payment_status_enum
    schema: public
  is_enum: true
- table:
    name: planning_constraints_requests
    schema: public
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - response
          - destination_url
          - session_id
          - created_at
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - destination_url
          - session_id
          - created_at
        filter: {}
- table:
    name: published_flows
    schema: public
  object_relationships:
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
    - name: user
      using:
        foreign_key_constraint_on: publisher_id
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
    - role: teamEditor
      permission:
        check:
          flow:
            team:
              members:
                _and:
                  - user_id:
                      _eq: x-hasura-user-id
                  - role:
                      _eq: teamEditor
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
        filter: {}
        allow_aggregations: true
    - role: platformAdmin
      permission:
        columns:
          - created_at
          - data
          - flow_id
          - id
          - publisher_id
          - summary
        filter: {}
        allow_aggregations: true
    - role: public
      permission:
        columns:
          - created_at
          - data
          - flow_id
          - id
          - publisher_id
          - summary
        filter: {}
        allow_aggregations: true
    - role: teamEditor
      permission:
        columns:
          - created_at
          - data
          - flow_id
          - id
          - publisher_id
          - summary
        filter: {}
        allow_aggregations: true
- table:
    name: reconciliation_requests
    schema: public
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - response
          - message
          - session_id
          - created_at
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - message
          - session_id
          - created_at
        filter: {}
  delete_permissions:
    - role: api
      permission:
        filter: {}
- table:
    name: s3_applications
    schema: public
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - webhook_request
          - webhook_response
          - session_id
          - team_slug
          - created_at
      comment: ""
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - webhook_request
          - webhook_response
          - session_id
          - team_slug
          - created_at
        filter: {}
      comment: ""
  update_permissions:
    - role: api
      permission:
        columns:
          - id
          - webhook_request
          - webhook_response
          - session_id
          - team_slug
          - created_at
        filter: {}
        check: null
      comment: ""
  event_triggers:
    - name: setup_s3_applications_notifications
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 30
        num_retries: 1
        timeout_sec: 60
      webhook: '{{HASURA_PLANX_API_URL}}'
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        method: POST
        query_params:
          type: s3-submission
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/send-slack-notification'
        version: 2
- table:
    name: sessions
    schema: public
  computed_fields:
    - name: payment_id
      definition:
        function:
          name: sessions_payment
          schema: public
      comment: A computed field to find the latest successful payment associated with a session
  insert_permissions:
    - role: public
      permission:
        check:
          email:
            _eq: x-hasura-email
        columns:
          - breadcrumbs
          - email
          - flow_id
          - id
  select_permissions:
    - role: public
      permission:
        columns:
          - created_at
          - breadcrumbs
          - has_user_saved
          - id
          - updated_at
        computed_fields:
          - payment_id
        filter:
          _and:
            - id:
                _eq: x-hasura-session-id
            - email:
                _eq: x-hasura-email
            - email:
                _neq: ""
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
  update_permissions:
    - role: public
      permission:
        columns:
          - breadcrumbs
          - deleted_at
        filter:
          _and:
            - id:
                _eq: x-hasura-session-id
            - email:
                _eq: x-hasura-email
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
            - locked_at:
                _is_null: true
        check: null
- table:
    name: submission_services_log
    schema: public
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - retry
          - response
          - event_id
          - event_type
          - status
          - created_at
          - flow_id
          - session_id
        filter: {}
      comment: ""
    - role: teamEditor
      permission:
        columns:
          - retry
          - response
          - event_id
          - event_type
          - status
          - created_at
          - flow_id
          - session_id
        filter: {}
      comment: ""
- table:
    name: submission_services_summary
    schema: public
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - number_times_resumed
          - sent_to_bops
          - sent_to_email
          - sent_to_s3_power_automate
          - sent_to_uniform
          - user_clicked_save
          - user_invited_to_pay
          - session_length_days
          - bops_applications
          - email_applications
          - payment_requests
          - payment_status
          - s3_applications
          - uniform_applications
          - allow_list_answers
          - application_declaration_connection
          - draw_boundary_action
          - find_property_action
          - property_constraints_planning
          - property_type
          - proposal_project_type
          - user_role
          - service_slug
          - session_id
          - team_slug
          - created_at
          - submitted_at
        filter: {}
      comment: ""
    - role: teamEditor
      permission:
        columns:
          - number_times_resumed
          - sent_to_bops
          - sent_to_email
          - sent_to_s3_power_automate
          - sent_to_uniform
          - user_clicked_save
          - user_invited_to_pay
          - session_length_days
          - bops_applications
          - email_applications
          - payment_requests
          - payment_status
          - s3_applications
          - uniform_applications
          - allow_list_answers
          - application_declaration_connection
          - draw_boundary_action
          - find_property_action
          - property_constraints_planning
          - property_type
          - proposal_project_type
          - user_role
          - service_slug
          - session_id
          - team_slug
          - created_at
          - submitted_at
        filter: {}
      comment: ""
- table:
    name: team_integrations
    schema: public
  object_relationships:
    - name: team
      using:
        foreign_key_constraint_on: team_id
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - team_id
          - production_bops_submission_url
          - staging_bops_submission_url
          - production_power_automate_api_key
          - staging_power_automate_api_key
          - has_planning_data
          - production_file_api_key
          - staging_file_api_key
          - production_bops_secret
          - staging_bops_secret
          - production_govpay_secret
          - staging_govpay_secret
          - power_automate_webhook_url
      comment: ""
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - team_id
          - production_bops_submission_url
          - staging_bops_submission_url
          - production_power_automate_api_key
          - staging_power_automate_api_key
          - has_planning_data
          - production_file_api_key
          - staging_file_api_key
          - production_bops_secret
          - staging_bops_secret
          - production_govpay_secret
          - staging_govpay_secret
          - power_automate_webhook_url
        filter: {}
    - role: public
      permission:
        columns:
          - has_planning_data
          - id
          - team_id
        filter: {}
      comment: ""
- table:
    name: team_members
    schema: public
  object_relationships:
    - name: team
      using:
        foreign_key_constraint_on: team_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - team_id
          - user_id
          - role
          - id
  select_permissions:
    - role: api
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter:
          user_id:
            _eq: x-hasura-user-id
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter: {}
        check: {}
  delete_permissions:
    - role: platformAdmin
      permission:
        filter: {}
- table:
    name: team_settings
    schema: public
  object_relationships:
    - name: team
      using:
        foreign_key_constraint_on: team_id
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - external_planning_site_name
          - external_planning_site_url
          - homepage
          - help_email
          - help_opening_hours
          - help_phone
          - email_reply_to_id
          - team_id
          - boundary_bbox
          - reference_code
          - boundary_url
      comment: ""
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - team_id
          - boundary_bbox
          - boundary_url
          - email_reply_to_id
          - external_planning_site_name
          - external_planning_site_url
          - help_email
          - help_opening_hours
          - help_phone
          - homepage
          - reference_code
        filter: {}
      comment: ""
    - role: platformAdmin
      permission:
        columns:
          - id
          - team_id
          - boundary_bbox
          - boundary_url
          - email_reply_to_id
          - external_planning_site_name
          - external_planning_site_url
          - help_email
          - help_opening_hours
          - help_phone
          - homepage
          - reference_code
        filter: {}
      comment: ""
    - role: public
      permission:
        columns:
          - boundary_bbox
          - boundary_url
          - email_reply_to_id
          - external_planning_site_name
          - external_planning_site_url
          - help_email
          - help_opening_hours
          - help_phone
          - homepage
          - id
          - reference_code
          - team_id
        filter: {}
      comment: ""
    - role: teamEditor
      permission:
        columns:
          - id
          - team_id
          - boundary_bbox
          - boundary_url
          - email_reply_to_id
          - external_planning_site_name
          - external_planning_site_url
          - help_email
          - help_opening_hours
          - help_phone
          - homepage
          - reference_code
        filter: {}
      comment: ""
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - boundary_bbox
          - boundary_url
          - email_reply_to_id
          - external_planning_site_name
          - external_planning_site_url
          - help_email
          - help_opening_hours
          - help_phone
          - homepage
          - reference_code
        filter: {}
        check: null
      comment: ""
    - role: teamEditor
      permission:
        columns:
          - boundary_bbox
          - boundary_url
          - email_reply_to_id
          - external_planning_site_name
          - external_planning_site_url
          - help_email
          - help_opening_hours
          - help_phone
          - homepage
          - reference_code
        filter:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
        check: null
      comment: ""
- table:
    name: team_themes
    schema: public
  object_relationships:
    - name: team
      using:
        foreign_key_constraint_on: team_id
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - team_id
          - favicon
          - logo
          - action_colour
          - link_colour
          - primary_colour
      comment: ""
  select_permissions:
    - role: api
      permission:
        columns:
          - action_colour
          - favicon
          - id
          - link_colour
          - logo
          - primary_colour
          - team_id
        filter: {}
      comment: ""
    - role: platformAdmin
      permission:
        columns:
          - action_colour
          - favicon
          - id
          - link_colour
          - logo
          - primary_colour
          - team_id
        filter: {}
      comment: ""
    - role: public
      permission:
        columns:
          - action_colour
          - favicon
          - id
          - link_colour
          - logo
          - primary_colour
          - team_id
        filter: {}
      comment: ""
    - role: teamEditor
      permission:
        columns:
          - action_colour
          - favicon
          - id
          - link_colour
          - logo
          - primary_colour
          - team_id
        filter: {}
      comment: ""
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - action_colour
          - favicon
          - link_colour
          - logo
          - primary_colour
        filter: {}
        check: null
      comment: ""
    - role: teamEditor
      permission:
        columns:
          - action_colour
          - favicon
          - link_colour
          - logo
          - primary_colour
        filter:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
        check: null
      comment: ""
- table:
    name: teams
    schema: public
  object_relationships:
    - name: integrations
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            name: team_integrations
            schema: public
    - name: team_settings
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            name: team_settings
            schema: public
    - name: theme
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            name: team_themes
            schema: public
  array_relationships:
    - name: flows
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            name: flows
            schema: public
    - name: members
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            name: team_members
            schema: public
  computed_fields:
    - name: boundary_bbox
      definition:
        function:
          name: boundary_bbox
          schema: public
      comment: Bounding box of the team's full boundary
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - boundary
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - settings
          - slug
          - submission_email
          - updated_at
  select_permissions:
    - role: api
      permission:
        columns:
          - boundary
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - submission_email
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
    - role: public
      permission:
        columns:
          - boundary
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - domain
          - name
          - notify_personalisation
          - settings
          - slug
          - submission_email
        filter: {}
        check: null
- table:
    name: teams_summary
    schema: public
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - govpay_enabled
          - planning_data_enabled
          - id
          - govnotify_personalisation
          - action_colour
          - article_4s_enabled
          - bops_submission_url
          - favicon
          - homepage
          - link_colour
          - logo
          - name
          - primary_colour
          - reference_code
          - send_to_email_address
          - slug
          - subdomain
        filter: {}
      comment: ""
- table:
    name: uniform_applications
    schema: public
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - response
          - idox_submission_id
          - created_at
          - destination
          - xml
          - payload
          - sanitised_at
          - submission_reference
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - idox_submission_id
          - created_at
          - destination
          - xml
          - payload
          - sanitised_at
          - submission_reference
        filter: {}
  update_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - idox_submission_id
          - created_at
          - destination
          - xml
          - payload
          - sanitised_at
          - submission_reference
        filter: {}
        check: {}
  event_triggers:
    - name: setup_uniform_applications_notifications
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 30
        num_retries: 1
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        method: POST
        query_params:
          type: uniform-submission
        template_engine: Kriti
        url: '{{$base_url}}/webhooks/hasura/send-slack-notification'
        version: 2
- table:
    name: user_roles
    schema: public
  is_enum: true
- table:
    name: users
    schema: public
  array_relationships:
    - name: created_flows
      using:
        foreign_key_constraint_on:
          column: creator_id
          table:
            name: flows
            schema: public
    - name: operations
      using:
        foreign_key_constraint_on:
          column: actor_id
          table:
            name: operations
            schema: public
    - name: teams
      using:
        foreign_key_constraint_on:
          column: user_id
          table:
            name: team_members
            schema: public
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - first_name
          - last_name
          - created_at
          - updated_at
          - is_platform_admin
          - email
  select_permissions:
    - role: api
      permission:
        columns:
          - created_at
          - email
          - first_name
          - id
          - is_platform_admin
          - is_staging_only
          - last_name
          - updated_at
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - id
          - first_name
          - last_name
          - email
          - created_at
          - updated_at
          - is_platform_admin
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - created_at
          - email
          - first_name
          - id
          - is_platform_admin
          - last_name
          - updated_at
        filter: {}
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - email
        filter: {}
        check: {}
