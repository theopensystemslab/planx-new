- table:
    schema: public
    name: analytics
  insert_permissions:
    - role: public
      permission:
        check: {}
        columns:
          - created_at
          - flow_id
          - id
          - referrer
          - type
          - user_agent
  select_permissions:
    - role: public
      permission:
        columns:
          - id
        filter: {}
  update_permissions:
    - role: public
      permission:
        columns:
          - ended_at
        filter: {}
        check: null
- table:
    schema: public
    name: analytics_logs
  insert_permissions:
    - role: public
      permission:
        check: {}
        columns:
          - analytics_id
          - created_at
          - flow_direction
          - has_clicked_help
          - id
          - input_errors
          - metadata
          - node_title
          - node_type
          - user_exit
  select_permissions:
    - role: public
      permission:
        columns:
          - analytics_id
          - created_at
          - id
          - user_exit
        filter: {}
  update_permissions:
    - role: public
      permission:
        columns:
          - flow_direction
          - has_clicked_help
          - input_errors
          - metadata
          - next_log_created_at
          - user_exit
        filter: {}
        check: null
- table:
    schema: public
    name: analytics_summary
- table:
    schema: public
    name: blpu_codes
  select_permissions:
    - role: public
      permission:
        columns:
          - description
          - code
          - value
        filter: {}
- table:
    schema: public
    name: bops_applications
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - req_headers
          - request
          - response
          - response_headers
          - bops_id
          - destination_url
          - session_id
          - created_at
          - sanitised_at
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - req_headers
          - request
          - response
          - response_headers
          - bops_id
          - destination_url
          - session_id
          - created_at
          - sanitised_at
        filter: {}
  update_permissions:
    - role: api
      permission:
        columns:
          - id
          - req_headers
          - request
          - response
          - response_headers
          - bops_id
          - destination_url
          - session_id
          - created_at
          - sanitised_at
        filter: {}
        check: {}
  event_triggers:
    - name: setup_bops_applications_notifications
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        num_retries: 1
        interval_sec: 30
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        url: '{{$base_url}}/webhooks/hasura/send-slack-notification'
        method: POST
        version: 2
        query_params:
          type: bops-submission
        template_engine: Kriti
- table:
    schema: public
    name: document_template
  is_enum: true
- table:
    schema: public
    name: email_applications
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - request
          - response
          - recipient
          - team_slug
          - created_at
          - sanitised_at
          - session_id
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - request
          - response
          - recipient
          - team_slug
          - created_at
          - sanitised_at
          - session_id
        filter: {}
  update_permissions:
    - role: api
      permission:
        columns:
          - id
          - request
          - response
          - recipient
          - team_slug
          - created_at
          - sanitised_at
          - session_id
        filter: {}
        check: {}
  event_triggers:
    - name: setup_email_applications_notifications
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        num_retries: 1
        interval_sec: 30
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        url: '{{$base_url}}/webhooks/hasura/send-slack-notification'
        method: POST
        version: 2
        query_params:
          type: email-submission
        template_engine: Kriti
- table:
    schema: public
    name: flow_document_templates
  object_relationships:
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
  select_permissions:
    - role: api
      permission:
        columns:
          - document_template
          - flow_id
        filter: {}
    - role: public
      permission:
        columns:
          - document_template
          - flow_id
        filter: {}
- table:
    schema: public
    name: flow_schemas
  select_permissions:
    - role: public
      permission:
        columns:
          - flow_id
          - node
          - planx_variable
          - text
          - type
        filter: {}
- table:
    schema: public
    name: flows
  object_relationships:
    - name: creator
      using:
        foreign_key_constraint_on: creator_id
    - name: team
      using:
        foreign_key_constraint_on: team_id
  array_relationships:
    - name: document_templates
      using:
        foreign_key_constraint_on:
          column: flow_id
          table:
            schema: public
            name: flow_document_templates
    - name: operations
      using:
        foreign_key_constraint_on:
          column: flow_id
          table:
            schema: public
            name: operations
    - name: published_flows
      using:
        foreign_key_constraint_on:
          column: flow_id
          table:
            schema: public
            name: published_flows
  computed_fields:
    - name: data_merged
      definition:
        function:
          schema: public
          name: compile_flow_portals
      comment: Flow data with portals merged in
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - creator_id
          - team_id
          - settings
          - slug
          - created_at
          - updated_at
          - copied_from
          - id
          - version
          - data
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - creator_id
          - team_id
          - settings
          - slug
          - created_at
          - updated_at
          - copied_from
          - id
          - version
          - data
    - role: teamEditor
      permission:
        check:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
        columns:
          - creator_id
          - team_id
          - settings
          - slug
          - created_at
          - updated_at
          - copied_from
          - id
          - version
          - data
  select_permissions:
    - role: api
      permission:
        columns:
          - creator_id
          - team_id
          - settings
          - slug
          - created_at
          - updated_at
          - copied_from
          - id
          - version
          - data
        computed_fields:
          - data_merged
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - created_at
          - creator_id
          - data
          - id
          - analytics_link
          - settings
          - slug
          - team_id
          - updated_at
          - version
        computed_fields:
          - data_merged
        filter: {}
    - role: public
      permission:
        columns:
          - created_at
          - creator_id
          - data
          - id
          - settings
          - slug
          - team_id
          - updated_at
          - version
        computed_fields:
          - data_merged
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - created_at
          - creator_id
          - data
          - id
          - analytics_link
          - settings
          - slug
          - team_id
          - updated_at
          - version
        computed_fields:
          - data_merged
        filter: {}
  update_permissions:
    - role: api
      permission:
        columns:
          - creator_id
          - team_id
          - settings
          - slug
          - created_at
          - updated_at
          - copied_from
          - id
          - version
          - data
        filter: {}
        check: {}
    - role: platformAdmin
      permission:
        columns:
          - data
          - settings
          - slug
          - team_id
        filter: {}
        check: null
    - role: teamEditor
      permission:
        columns:
          - data
          - settings
          - slug
          - team_id
        filter:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
        check: null
  delete_permissions:
    - role: platformAdmin
      permission:
        backend_only: false
        filter: {}
    - role: teamEditor
      permission:
        backend_only: false
        filter:
          team:
            members:
              _and:
                - user_id:
                    _eq: x-hasura-user-id
                - role:
                    _eq: teamEditor
- table:
    schema: public
    name: global_settings
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - footer_content
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - footer_content
          - id
        filter: {}
    - role: public
      permission:
        columns:
          - footer_content
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - footer_content
          - id
        filter: {}
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - footer_content
          - id
        filter: {}
        check: {}
- table:
    schema: public
    name: lowcal_sessions
  object_relationships:
    - name: flow
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: flows
          insertion_order: null
          column_mapping:
            flow_id: id
  array_relationships:
    - name: payment_requests
      using:
        foreign_key_constraint_on:
          column: session_id
          table:
            schema: public
            name: payment_requests
    - name: payment_status
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: payment_status
          insertion_order: null
          column_mapping:
            id: session_id
  insert_permissions:
    - role: public
      permission:
        check:
          email:
            _eq: x-hasura-lowcal-email
        columns:
          - data
          - email
          - flow_id
          - id
  select_permissions:
    - role: api
      permission:
        columns:
          - data
          - email
          - created_at
          - deleted_at
          - locked_at
          - submitted_at
          - updated_at
          - flow_id
          - id
          - has_user_saved
          - sanitised_at
        filter: {}
    - role: public
      permission:
        columns:
          - created_at
          - data
          - has_user_saved
          - id
          - submitted_at
          - updated_at
        filter:
          _and:
            - id:
                _eq: x-hasura-lowcal-session-id
            - email:
                _eq: x-hasura-lowcal-email
            - email:
                _neq: ""
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
  update_permissions:
    - role: api
      permission:
        columns:
          - data
          - email
          - created_at
          - deleted_at
          - locked_at
          - submitted_at
          - updated_at
          - flow_id
          - id
          - has_user_saved
          - sanitised_at
        filter: {}
        check: {}
    - role: public
      permission:
        columns:
          - data
          - deleted_at
        filter:
          _and:
            - id:
                _eq: x-hasura-lowcal-session-id
            - email:
                _eq: x-hasura-lowcal-email
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
            - locked_at:
                _is_null: true
        check: {}
  event_triggers:
    - name: email_user_submission_confirmation
      definition:
        enable_manual: false
        update:
          columns:
            - submitted_at
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "payload": {
                "sessionId": {{$body.event.data.new.id}},
                "email": {{$body.event.data.new.email}},
                "lockedAt": {{$body.event.data.new.locked_at}}
              }
            }
        url: '{{$base_url}}/send-email/confirmation'
        method: POST
        version: 2
        query_params: {}
        template_engine: Kriti
    - name: setup_lowcal_expiry_events
      definition:
        enable_manual: false
        update:
          columns:
            - has_user_saved
      retry_conf:
        num_retries: 3
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "sessionId": {{$body.event.data.new.id}},
                "email": {{$body.event.data.new.email}}
              }
            }
        url: '{{$base_url}}/webhooks/hasura/create-expiry-event'
        method: POST
        version: 2
        query_params: {}
        template_engine: Kriti
    - name: setup_lowcal_reminder_events
      definition:
        enable_manual: false
        update:
          columns:
            - has_user_saved
      retry_conf:
        num_retries: 3
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "sessionId": {{$body.event.data.new.id}},
                "email": {{$body.event.data.new.email}}
              }
            }
        url: '{{$base_url}}/webhooks/hasura/create-reminder-event'
        method: POST
        version: 2
        query_params: {}
        template_engine: Kriti
- table:
    schema: public
    name: operations
  object_relationships:
    - name: actor
      using:
        foreign_key_constraint_on: actor_id
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
    - role: teamEditor
      permission:
        check:
          flow:
            team:
              members:
                _and:
                  - user_id:
                      _eq: x-hasura-user-id
                  - role:
                      _eq: teamEditor
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
  select_permissions:
    - role: platformAdmin
      permission:
        columns:
          - id
          - flow_id
          - version
          - actor_id
          - data
          - created_at
          - updated_at
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - id
          - flow_id
          - version
          - actor_id
          - data
          - created_at
          - updated_at
        filter: {}
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
        filter: {}
        check: {}
    - role: teamEditor
      permission:
        columns:
          - id
          - actor_id
          - version
          - data
          - created_at
          - updated_at
          - flow_id
        filter:
          flow:
            team:
              members:
                _and:
                  - user_id:
                      _eq: x-hasura-user-id
                  - role:
                      _eq: teamEditor
        check: {}
- table:
    schema: public
    name: payment_requests
  object_relationships:
    - name: session
      using:
        foreign_key_constraint_on: session_id
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - session_preview_data
          - applicant_name
          - payee_email
          - payee_name
          - created_at
          - paid_at
          - id
          - session_id
          - govpay_payment_id
          - payment_amount
  select_permissions:
    - role: api
      permission:
        columns:
          - session_preview_data
          - applicant_name
          - payee_email
          - payee_name
          - created_at
          - paid_at
          - id
          - session_id
          - govpay_payment_id
          - payment_amount
        filter: {}
    - role: public
      permission:
        columns:
          - applicant_name
          - created_at
          - govpay_payment_id
          - id
          - paid_at
          - payment_amount
          - session_preview_data
        filter:
          id:
            _eq: x-hasura-payment-request-id
  update_permissions:
    - role: api
      permission:
        columns:
          - session_preview_data
          - applicant_name
          - payee_email
          - payee_name
          - created_at
          - paid_at
          - id
          - session_id
          - govpay_payment_id
          - payment_amount
        filter: {}
        check: {}
  delete_permissions:
    - role: api
      permission:
        backend_only: false
        filter: {}
  event_triggers:
    - name: setup_payment_expiry_events
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        num_retries: 3
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "paymentRequestId": {{$body.event.data.new.id}}
              }
            }
        url: '{{$base_url}}/webhooks/hasura/create-payment-expiry-events'
        method: POST
        version: 2
        query_params: {}
        template_engine: Kriti
    - name: setup_payment_invitation_events
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        num_retries: 3
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "paymentRequestId": {{$body.event.data.new.id}}
              }
            }
        url: '{{$base_url}}/webhooks/hasura/create-payment-invitation-events'
        method: POST
        version: 2
        query_params: {}
        template_engine: Kriti
    - name: setup_payment_reminder_events
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        num_retries: 3
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "paymentRequestId": {{$body.event.data.new.id}}
              }
            }
        url: '{{$base_url}}/webhooks/hasura/create-payment-reminder-events'
        method: POST
        version: 2
        query_params: {}
        template_engine: Kriti
    - name: setup_payment_send_events
      definition:
        enable_manual: false
        update:
          columns:
            - paid_at
      retry_conf:
        num_retries: 3
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "createdAt": {{$body.event.data.new.created_at}},
              "payload": {
                "sessionId": {{$body.event.data.new.session_id}}
              }
            }
        url: '{{$base_url}}/webhooks/hasura/create-payment-send-events'
        method: POST
        version: 2
        query_params: {}
        template_engine: Kriti
- table:
    schema: public
    name: payment_status
  object_relationships:
    - name: lowcal_session
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: lowcal_sessions
          insertion_order: null
          column_mapping:
            session_id: id
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - payment_id
          - status
          - team_slug
          - created_at
          - flow_id
          - session_id
          - amount
- table:
    schema: public
    name: payment_status_enum
  is_enum: true
- table:
    schema: public
    name: planning_constraints_requests
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - response
          - destination_url
          - session_id
          - created_at
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - destination_url
          - session_id
          - created_at
        filter: {}
- table:
    schema: public
    name: project_types
  select_permissions:
    - role: public
      permission:
        columns:
          - description
          - value
        filter: {}
- table:
    schema: public
    name: published_flows
  object_relationships:
    - name: flow
      using:
        foreign_key_constraint_on: flow_id
    - name: user
      using:
        foreign_key_constraint_on: publisher_id
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
    - role: teamEditor
      permission:
        check:
          flow:
            team:
              members:
                _and:
                  - user_id:
                      _eq: x-hasura-user-id
                  - role:
                      _eq: teamEditor
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - publisher_id
          - summary
          - created_at
          - flow_id
          - data
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - created_at
          - data
          - flow_id
          - id
          - publisher_id
          - summary
        filter: {}
    - role: public
      permission:
        columns:
          - created_at
          - data
          - flow_id
          - id
          - publisher_id
          - summary
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - created_at
          - data
          - flow_id
          - id
          - publisher_id
          - summary
        filter: {}
- table:
    schema: public
    name: reconciliation_requests
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - response
          - message
          - session_id
          - created_at
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - message
          - session_id
          - created_at
        filter: {}
  delete_permissions:
    - role: api
      permission:
        backend_only: false
        filter: {}
- table:
    schema: public
    name: sessions
  computed_fields:
    - name: payment_id
      definition:
        function:
          schema: public
          name: sessions_payment
      comment: A computed field to find the latest successful payment associated with a session
  insert_permissions:
    - role: public
      permission:
        check:
          email:
            _eq: x-hasura-email
        columns:
          - breadcrumbs
          - email
          - flow_id
          - id
  select_permissions:
    - role: public
      permission:
        columns:
          - created_at
          - breadcrumbs
          - has_user_saved
          - id
          - updated_at
        computed_fields:
          - payment_id
        filter:
          _and:
            - id:
                _eq: x-hasura-session-id
            - email:
                _eq: x-hasura-email
            - email:
                _neq: ""
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
  update_permissions:
    - role: public
      permission:
        columns:
          - breadcrumbs
          - deleted_at
        filter:
          _and:
            - id:
                _eq: x-hasura-session-id
            - email:
                _eq: x-hasura-email
            - submitted_at:
                _is_null: true
            - deleted_at:
                _is_null: true
            - locked_at:
                _is_null: true
        check: null
- table:
    schema: public
    name: team_members
  object_relationships:
    - name: team
      using:
        foreign_key_constraint_on: team_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - team_id
          - user_id
          - role
          - id
  select_permissions:
    - role: api
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter:
          user_id:
            _eq: x-hasura-user-id
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - team_id
          - user_id
          - role
          - id
        filter: {}
        check: {}
  delete_permissions:
    - role: platformAdmin
      permission:
        backend_only: false
        filter: {}
- table:
    schema: public
    name: teams
  array_relationships:
    - name: flows
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            schema: public
            name: flows
    - name: members
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            schema: public
            name: team_members
  computed_fields:
    - name: boundary_bbox
      definition:
        function:
          schema: public
          name: boundary_bbox
      comment: Bounding box of the team's full boundary
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - boundary
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - settings
          - slug
          - submission_email
          - theme
          - updated_at
  select_permissions:
    - role: api
      permission:
        columns:
          - boundary
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - submission_email
          - theme
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - theme
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
    - role: public
      permission:
        columns:
          - boundary
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - theme
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - created_at
          - domain
          - id
          - name
          - notify_personalisation
          - reference_code
          - settings
          - slug
          - theme
          - updated_at
        computed_fields:
          - boundary_bbox
        filter: {}
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - domain
          - name
          - notify_personalisation
          - settings
          - slug
          - submission_email
          - theme
        filter: {}
        check: null
- table:
    schema: public
    name: uniform_applications
  insert_permissions:
    - role: api
      permission:
        check: {}
        columns:
          - id
          - response
          - idox_submission_id
          - created_at
          - destination
          - xml
          - payload
          - sanitised_at
          - submission_reference
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - idox_submission_id
          - created_at
          - destination
          - xml
          - payload
          - sanitised_at
          - submission_reference
        filter: {}
  update_permissions:
    - role: api
      permission:
        columns:
          - id
          - response
          - idox_submission_id
          - created_at
          - destination
          - xml
          - payload
          - sanitised_at
          - submission_reference
        filter: {}
        check: {}
  event_triggers:
    - name: setup_uniform_applications_notifications
      definition:
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        num_retries: 1
        interval_sec: 30
        timeout_sec: 60
      webhook_from_env: HASURA_PLANX_API_URL
      headers:
        - name: authorization
          value_from_env: HASURA_PLANX_API_KEY
      request_transform:
        url: '{{$base_url}}/webhooks/hasura/send-slack-notification'
        method: POST
        version: 2
        query_params:
          type: uniform-submission
        template_engine: Kriti
- table:
    schema: public
    name: user_roles
  is_enum: true
- table:
    schema: public
    name: users
  array_relationships:
    - name: created_flows
      using:
        foreign_key_constraint_on:
          column: creator_id
          table:
            schema: public
            name: flows
    - name: operations
      using:
        foreign_key_constraint_on:
          column: actor_id
          table:
            schema: public
            name: operations
    - name: teams
      using:
        foreign_key_constraint_on:
          column: user_id
          table:
            schema: public
            name: team_members
  insert_permissions:
    - role: platformAdmin
      permission:
        check: {}
        columns:
          - id
          - first_name
          - last_name
          - created_at
          - updated_at
          - is_platform_admin
          - email
  select_permissions:
    - role: api
      permission:
        columns:
          - id
          - first_name
          - last_name
          - created_at
          - updated_at
          - is_platform_admin
          - email
        filter: {}
    - role: platformAdmin
      permission:
        columns:
          - id
          - first_name
          - last_name
          - email
          - created_at
          - updated_at
          - is_platform_admin
        filter: {}
    - role: teamEditor
      permission:
        columns:
          - created_at
          - email
          - first_name
          - id
          - is_platform_admin
          - last_name
          - updated_at
        filter:
          id:
            _eq: x-hasura-user-id
  update_permissions:
    - role: platformAdmin
      permission:
        columns:
          - email
        filter: {}
        check: {}
