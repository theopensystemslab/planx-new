table:
  name: lowcal_sessions
  schema: public
object_relationships:
  - name: flow
    using:
      manual_configuration:
        column_mapping:
          flow_id: id
        insertion_order: null
        remote_table:
          name: flows
          schema: public
array_relationships:
  - name: payment_requests
    using:
      foreign_key_constraint_on:
        column: session_id
        table:
          name: payment_requests
          schema: public
  - name: payment_status
    using:
      manual_configuration:
        column_mapping:
          id: session_id
        insertion_order: null
        remote_table:
          name: payment_status
          schema: public
computed_fields:
  - name: user_status
    definition:
      function:
        name: lowcal_sessions_user_status
        schema: public
  - name: system_status
    definition:
      function:
        name: lowcal_sessions_system_status
        schema: public
insert_permissions:
  - role: public
    permission:
      check:
        email:
          _eq: x-hasura-lowcal-email
      columns:
        - data
        - email
        - flow_id
        - id
select_permissions:
  - role: api
    permission:
      columns:
        - data
        - email
        - created_at
        - deleted_at
        - locked_at
        - submitted_at
        - updated_at
        - flow_id
        - id
        - allow_list_answers
        - has_user_saved
        - sanitised_at
      computed_fields:
        - user_status
        - system_status
      filter: {}
  - role: public
    permission:
      columns:
        - created_at
        - data
        - flow_id
        - has_user_saved
        - id
        - submitted_at
        - updated_at
      computed_fields:
        - user_status
        - system_status
      filter:
        _and:
          - id:
              _eq: x-hasura-lowcal-session-id
          - email:
              _eq: x-hasura-lowcal-email
          - email:
              _neq: ""
          - submitted_at:
              _is_null: true
          - deleted_at:
              _is_null: true
update_permissions:
  - role: api
    permission:
      columns:
        - allow_list_answers
        - created_at
        - data
        - deleted_at
        - email
        - flow_id
        - has_user_saved
        - id
        - locked_at
        - sanitised_at
        - submitted_at
        - updated_at
      filter: {}
      check: {}
  - role: public
    permission:
      columns:
        - data
        - deleted_at
      filter:
        _and:
          - id:
              _eq: x-hasura-lowcal-session-id
          - email:
              _eq: x-hasura-lowcal-email
          - submitted_at:
              _is_null: true
          - deleted_at:
              _is_null: true
          - locked_at:
              _is_null: true
      check: {}
event_triggers:
  - name: email_user_submission_confirmation
    definition:
      enable_manual: false
      update:
        columns:
          - submitted_at
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook_from_env: HASURA_PLANX_API_URL
    headers:
      - name: authorization
        value_from_env: HASURA_PLANX_API_KEY
    request_transform:
      body:
        action: transform
        template: |-
          {
            "payload": {
              "sessionId": {{$body.event.data.new.id}},
              "email": {{$body.event.data.new.email}},
              "lockedAt": {{$body.event.data.new.locked_at}}
            }
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      url: '{{$base_url}}/send-email/confirmation'
      version: 2
  - name: setup_lowcal_expiry_events
    definition:
      enable_manual: false
      update:
        columns:
          - has_user_saved
    retry_conf:
      interval_sec: 10
      num_retries: 3
      timeout_sec: 60
    webhook_from_env: HASURA_PLANX_API_URL
    headers:
      - name: authorization
        value_from_env: HASURA_PLANX_API_KEY
    request_transform:
      body:
        action: transform
        template: |-
          {
            "createdAt": {{$body.event.data.new.created_at}},
            "payload": {
              "sessionId": {{$body.event.data.new.id}},
              "email": {{$body.event.data.new.email}}
            }
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      url: '{{$base_url}}/webhooks/hasura/create-expiry-event'
      version: 2
  - name: setup_lowcal_reminder_events
    definition:
      enable_manual: false
      update:
        columns:
          - has_user_saved
    retry_conf:
      interval_sec: 10
      num_retries: 3
      timeout_sec: 60
    webhook_from_env: HASURA_PLANX_API_URL
    headers:
      - name: authorization
        value_from_env: HASURA_PLANX_API_KEY
    request_transform:
      body:
        action: transform
        template: |-
          {
            "createdAt": {{$body.event.data.new.created_at}},
            "payload": {
              "sessionId": {{$body.event.data.new.id}},
              "email": {{$body.event.data.new.email}}
            }
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      url: '{{$base_url}}/webhooks/hasura/create-reminder-event'
      version: 2
