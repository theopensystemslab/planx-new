name: Pulumi (Deploy Staging)
on:
  push:
    branches:
      - main

# When a concurrent job or workflow is queued, if another job or workflow using the same concurrency group in the repository is in progress,
# the queued job or workflow will be pending. Any previously pending job or workflow in the concurrency group will be canceled.
concurrency: staging_environment

env:
  DEPLOYMENT_ENVIRONMENT: staging
  PNPM_VERSION: 7.8.0
  NODE_VERSION: 16.13.1 # 16.13.1 = LTS

jobs:
  build_react:
    name: Build React App
    needs: [changes]
    uses: ./.github/workflows/build-react.yml
    with:
      target: editor.planx.dev
      environment: staging

  pulumi:
    name: Pulumi Up
    needs: build_react
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-region: eu-west-2
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
      - run: npm install -g pnpm@${{ env.PNPM_VERSION }}
        working-directory: infrastructure/application
      - run: pnpm install --frozen-lockfile
        working-directory: infrastructure/application
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./editor.planx.uk/build
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: staging
          work-dir: infrastructure/application
          edit-pr-comment: true
          refresh: true
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  notifications:
    name: Notifications
    needs: pulumi
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      # Airbrake notification - https://airbrake.io/docs/features/deploy-tracking
      - name: Notify Airbrake of deploy
        id: airbrake-deploy
        uses: mtchavez/airbrake-deploy@v1
        with:
          project-id: ${{ secrets.AIRBRAKE_PROJECT_ID }}
          project-key: ${{ secrets.AIRBRAKE_PROJECT_KEY }}
          environment: ${{ env.DEPLOYMENT_ENVIRONMENT }}
          repository: https://github.com${{ github.repo }}
          revision: ${{ github.sha }}
          user: ${{ github.actor }}
      - name: Get Airbrake deploy response
        run: echo "The response was ${{ steps.airbrake-deploy.outputs.response }}"
      # Slack deployment notification
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_USERNAME: PlanX Deploy
          SLACK_COLOR: "#4F93E3"
          SLACK_TITLE: ${{ env.DEPLOYMENT_ENVIRONMENT }} deploy
          SLACK_WEBHOOK: ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK }}
