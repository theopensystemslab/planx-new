on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      environment:
        required: true
        type: string

jobs:
  build_react:
    name: Build React App
    runs-on: ubuntu-22.04
    steps:
      - name: test conditional env
        run: |
          echo "${{ true && 'true' || 'false' }}"
          echo "${{ false && 'true' || 'false' }}"
          echo "${{ true && 'something' || '' }}"
          echo "${{ false && 'something' || '' }}"
      - uses: actions/checkout@v2
      - uses: cardinalby/export-env-action@v2
        with:
          envFile: '.github/workflows/constants.env'
          expand: true
          expandWithJobEnv: true
      - name: Cache build assets
        id: cache-react-build-assets
        uses: actions/cache@v3
        with:
          path: ./${{ env.EDITOR_DIRECTORY }}/build
          key: ${{ runner.os }}-${{ hashFiles('editor.planx.uk/**') }}-${{ inputs.target }}
      - uses: pnpm/action-setup@v2.2.2
        if: steps.cache-react-build-assets.outputs.cache-hit != 'true'
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v2
        if: steps.cache-react-build-assets.outputs.cache-hit != 'true'
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"
      - run: pnpm distribute ../${{ env.EDITOR_DIRECTORY }}
        if: steps.cache-react-build-assets.outputs.cache-hit != 'true'
        working-directory: core
      - run: pnpm install --frozen-lockfile
        if: steps.cache-react-build-assets.outputs.cache-hit != 'true'
        working-directory: ${{ env.EDITOR_DIRECTORY }}
      - run: pnpm build
        if: steps.cache-react-build-assets.outputs.cache-hit != 'true'
        env:
          REACT_APP_AIRBRAKE_PROJECT_ID: ${{ secrets.AIRBRAKE_PROJECT_ID }}
          REACT_APP_AIRBRAKE_PROJECT_KEY: ${{ secrets.AIRBRAKE_PROJECT_KEY }}
          REACT_APP_API_URL: https://api.${{ inputs.target }}
          REACT_APP_FEEDBACK_FISH_ID: 65f02de00b90d1
          REACT_APP_HASURA_URL: https://hasura.${{ inputs.target }}/v1/graphql
          REACT_APP_SHAREDB_URL: wss://sharedb.${{ inputs.target }}
          # TODO: this shouldn't be set for staging
          # needed because there's no API to change google's allowed OAuth URLs
          REACT_APP_GOOGLE_OAUTH_OVERRIDE: "${{ inputs.environment == 'pizza' && 'https://api.editor.planx.dev' || '' }}"
          REACT_APP_ENV: ${{ inputs.environment }}
        working-directory: ${{ env.EDITOR_DIRECTORY }}
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./editor.planx.uk/build
          if-no-files-found: error
      - run: pnpm build-storybook
        if: steps.cache-react-build-assets.outputs.cache-hit != 'true'
        working-directory: ${{ env.EDITOR_DIRECTORY }}
        env:
          # same env as above, if it's job.env it can't access existing env.[variable]
          REACT_APP_AIRBRAKE_PROJECT_ID: ${{ secrets.AIRBRAKE_PROJECT_ID }}
          REACT_APP_AIRBRAKE_PROJECT_KEY: ${{ secrets.AIRBRAKE_PROJECT_KEY }}
          REACT_APP_API_URL: https://api.${{ github.event.number }}.${{ env.DOMAIN }}
          REACT_APP_FEEDBACK_FISH_ID: 65f02de00b90d1
          REACT_APP_HASURA_URL: https://hasura.${{ github.event.number }}.${{ env.DOMAIN }}/v1/graphql
          REACT_APP_SHAREDB_URL: wss://sharedb.${{ github.event.number }}.${{ env.DOMAIN }}
          REACT_APP_GOOGLE_OAUTH_OVERRIDE: https://api.editor.planx.dev
          REACT_APP_ENV: ${{ inputs.environment }}
