name: Editor

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

defaults:
  run:
    working-directory: editor.planx.uk

jobs:
  test_and_build:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      # https://docs.github.com/en/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows#using-the-cache-action

      - name: NPM cache
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: PNPM cache
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm
        with:
          # pnpm cache files are stored in `~/.pnpm-store` on Linux/macOS
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install -g pnpm
        env:
          CI: true

      - name: Install Dependencies
        run: pnpm install
        env:
          CI: true

      - name: Test
        run: pnpm test
        env:
          CI: true

      - name: Build
        run: pnpm build
        env:
          CI: true

      - name: Deploy to Netlify
        id: deploy-netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=build --alias=${{ github.head_ref }}

      - name: Netlify Preview URL
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OUTPUT: "This pull request is being automatically deployed to Netlify.\n\nüîç Inspect: ${{ steps.deploy-netlify.outputs.NETLIFY_LOGS_URL }}\n‚úÖ Preview: ${{ steps.deploy-netlify.outputs.NETLIFY_URL }}"
        with:
          msg: ${{ env.OUTPUT }}
          check_for_duplicate_msg: true
