# Please see https://github.com/theopensystemslab/planx-new/blob/main/doc/architecture/decisions/0004-secret-generation.md for procedure on secrets generation

# Used by docker-compose in local development and pull request (aka pizza) environments

# API
API_PORT=7002
API_URL_EXT=http://localhost:${API_PORT}
ENCRYPTION_KEY=ðŸ‘»

# JWT_SECRET must be at least 32 characters
JWT_SECRET=ðŸ‘»

SESSION_SECRET=ðŸ‘»

# Google Cloud OAuth 2.0 Client ID
GOOGLE_CLIENT_ID=ðŸ‘»
GOOGLE_CLIENT_SECRET=ðŸ‘»

# Microsoft Azure OIDC credentials
MICROSOFT_CLIENT_ID=ðŸ‘»
MICROSOFT_CLIENT_SECRET=ðŸ‘»

# AWS credentials for uploading user files from local and pull request environments to a staging S3 bucket
AWS_S3_REGION=eu-west-2
AWS_S3_ACL=public-read
AWS_S3_BUCKET=ðŸ‘»
AWS_ACCESS_KEY=ðŸ‘»
AWS_SECRET_KEY=ðŸ‘»

# User-uploaded S3 files require token-based access (token is used internally and shared with BOPS; local and pull request environments use the staging token)
FILE_API_KEY=ðŸ‘»
FILE_API_KEY_NEXUS=ðŸ‘»
FILE_API_KEY_BARNET=ðŸ‘»
FILE_API_KEY_SOUTHWARK=ðŸ‘»

# Editor
EDITOR_URL_EXT=http://localhost:3000

# Hasura
HASURA_GRAPHQL_ADMIN_SECRET=ðŸ‘»
HASURA_PROXY_PORT=7100
HASURA_GRAPHQL_URL=http://localhost:${HASURA_PROXY_PORT}/v1/graphql
HASURA_CONSOLE_PORT=9695
HASURA_GRAPHQL_CORS_DOMAIN="http://localhost:${API_PORT}, http://localhost:${HASURA_CONSOLE_PORT}, http://localhost:3000, http://api:${API_PORT}, http://localhost:${HASURA_PROXY_PORT}/v1/graphql, https://*.planx.uk, https://*.planx.dev, https://*.planx.pizza, https://*.gov.uk"

# Hasura Metadata API
HASURA_PLANX_API_URL=http://api:${API_PORT}
HASURA_PLANX_API_KEY=ðŸ‘»

# Hasura Events send messages to #planx-notifications channel
SLACK_WEBHOOK_URL=ðŸ‘»

# Metabase analytics
METABASE_PORT=5000
METABASE_API_KEY=ðŸ‘»
METABASE_URL_EXT=http://localhost:${METABASE_PORT}

# Minio object storage server
MINIO_PORT=9000
MINIO_ADMIN_PORT=9001

# PostgreSQL
PG_PORT=7001
PG_DATABASE=planxdb
PG_USERNAME=dbuser
PG_PASSWORD=ðŸ‘»

# PG user with permission to sync content between environments
PRODUCTION_PG_URL_FOR_USER_GITHUB_ACTIONS=ðŸ‘»

# ShareDB
SHAREDB_PORT=7003

# Integrations (local and pull request environments point to third party staging environments)
GOVUK_NOTIFY_API_KEY=ðŸ‘»

UNIFORM_TOKEN_URL=ðŸ‘»
UNIFORM_SUBMISSION_URL=ðŸ‘»

ORDNANCE_SURVEY_API_KEY=ðŸ‘»

# Data retention policy
RETENTION_PERIOD_MONTHS=6;

# E2E mock server
E2E_MOCK_SERVER_PORT=11111
E2E_MOCK_SERVER=http://localhost:${E2E_MOCK_SERVER_PORT}
E2E_MOCK_SERVER_INTERFACE_PORT=11112
E2E_MOCK_SERVER_INTERFACE=http://localhost:${E2E_MOCK_SERVER_INTERFACE_PORT}

# Set this if you want to hide debug output locally
SUPPRESS_LOGS=true

# Local authority specific integrations
## Lambeth
UNIFORM_CLIENT_LAMBETH=ðŸ‘»

## Southwark
UNIFORM_CLIENT_SOUTHWARK=ðŸ‘»

## Buckinghamshire
UNIFORM_CLIENT_AYLESBURY_VALE=ðŸ‘»
UNIFORM_CLIENT_CHILTERN=ðŸ‘»
UNIFORM_CLIENT_WYCOMBE=ðŸ‘»

## Forthcoming Idox Nexus integration
IDOX_NEXUS_CLIENT=ðŸ‘»
IDOX_NEXUS_TOKEN_URL=ðŸ‘»
IDOX_NEXUS_SUBMISSION_URL=ðŸ‘»

## End-to-end test team (borrows Lambeth's details)
GOV_UK_PAY_SECRET_E2E=ðŸ‘»
