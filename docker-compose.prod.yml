version: "3.7"

services:
  hasura:
    environment:
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"

  api:
    stdin_open: false
    tty: false
    build:
      dockerfile: Dockerfile
    volumes:
      - "./api.planx.uk:/api"
      - "/api/node_modules"

  sharedb:
    stdin_open: false
    tty: false
    build:
      dockerfile: Dockerfile
    volumes:
      - "./sharedb.planx.uk:/sharedb"
      - "/sharedb/node_modules"

  static:
    restart: always
    image: nginx:alpine
    ports:
      - ${STATIC_PORT}:80
    volumes:
      - ./nginx/static:/usr/share/nginx/html
    environment:
      VIRTUAL_HOST: ${STATIC_HOST_PROD}
      LETSENCRYPT_HOST: ${STATIC_HOST_PROD}
      VIRTUAL_PORT: ${STATIC_PORT}

  nginx-proxy:
    restart: always
    container_name: planx-nginx-proxy
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - ./nginx/nginx_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/cdn.planx.uk:/etc/nginx/vhost.d/cdn.planx.uk

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DEBUG: "true"
      NGINX_PROXY_CONTAINER: planx-nginx-proxy
      DEFAULT_EMAIL: ${LETSENCRYPT_EMAIL}

volumes:
  vhost:
  html:
  certs:
