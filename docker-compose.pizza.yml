version: "3.8"

# If you change anything here (e.g. environment variables)
# remember to cascade the change to `infrastructure/`

services:
  postgres:
    labels:
      virtual.host: postgres.${ROOT_DOMAIN}
      virtual.port: 5432
      virtual.tls: ${TLS_EMAIL}

  hasura:
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_CORS_DOMAIN: ${HASURA_GRAPHQL_CORS_DOMAIN}
      HASURA_GRAPHQL_DATABASE_URL: postgres://${PG_USERNAME}:${PG_PASSWORD}@postgres/${PG_DATABASE}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "${JWT_SECRET}" }'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"
      HASURA_PLANX_API_KEY: ${HASURA_PLANX_API_KEY}
      HASURA_PLANX_API_URL: ${HASURA_PLANX_API_URL}
    labels:
      virtual.port: 8080
      virtual.tls: ${TLS_EMAIL}

  hasura-proxy:
    labels:
      virtual.host: hasura.${ROOT_DOMAIN}
      virtual.port: 7000
      virtual.tls: ${TLS_EMAIL}

  api:
    build:
      target: production
    volumes:
      - "/api/node_modules"
      - "/api/dist"
    env_file: "./env.pizza"
    labels:
      virtual.host: api.${ROOT_DOMAIN}
      virtual.port: ${API_PORT}
      virtual.tls: ${TLS_EMAIL}
    environment:
      NODE_ENV: "pizza"

  sharedb:
    environment:
      JWT_SECRET: ${JWT_SECRET}
    labels:
      virtual.host: sharedb.${ROOT_DOMAIN}
      virtual.port: 8000
      virtual.tls: ${TLS_EMAIL}

  editor:
    image: pierrezemb/gostatic
    profiles: ["analytics"]
    volumes:
      - ./editor.planx.uk/build:/srv/http
    entrypoint: "/goStatic --fallback /index.html"
    labels:
      virtual.host: ${ROOT_DOMAIN}
      virtual.port: 8043
      virtual.tls: ${TLS_EMAIL}

  caddy-gen:
    image: wemakeservices/caddy-gen:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - caddy_data:/data/caddy # to back up certificates
    ports:
      - 80:80
      - 443:443

volumes:
  caddy_data:
  caddy_config:
