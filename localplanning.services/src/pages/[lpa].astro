---
import { fetchAllLPAs } from "@lib/lpa-api";
import Layout from "@layouts/Layout.astro";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import ServiceCard from "@components/ServiceCard.astro";
import LpaMasthead from "@components/LpaMasthead.astro";
import Container from "@components/Container.astro";
import Accordion from "@components/Accordion.astro";

export const getStaticPaths = (async () => {
  const lpas = await fetchAllLPAs();
  return lpas.map((lpa) => ({
    params: { lpa: lpa.slug },
    props: { lpaData: lpa },
  }));
}) satisfies GetStaticPaths;

const { lpaData } = Astro.props;

// TODO: Pass title as prop into layout?
// type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

if (!lpaData) return Astro.redirect("/404");

const testingService = {
  name: "Testing submission service",
  slug: "testing-submission-service",
  summary: "A test service for submissions",
  description: "A test service for submissions",
  url: "https://4962.planx.pizza/buckinghamshire/testing-submission-service/published",
};
---

<Layout>
  <LpaMasthead
    title="Local planning services offered by {lpaName}"
    lpaName={lpaData.name}
    logo={lpaData.theme.logo}
    backgroundColour={lpaData.theme?.primaryColour}
  />
  <Container>
    <div class="flex flex-col gap-4 clamp-[py,4,6]">
      <Accordion title="Start a planning application" id="apply-accordion">
        <ul class="flex flex-col gap-4">
           <ServiceCard
            service={testingService}
            team={{ domain: lpaData.domain }}
          />
          {
            lpaData.applyServices.map((service) => (
              <ServiceCard
                service={service}
                team={{ domain: lpaData.domain }}
              />
            ))
          }
        </ul>
      </Accordion>
      <Accordion title="Notify your authority" id="notify-accordion">
        <ul class="flex flex-col gap-4">
          {
            lpaData.notifyServices.map((service) => (
              <ServiceCard
                service={service}
                team={{ domain: lpaData.domain }}
              />
            ))
          }
        </ul>
      </Accordion>
      <Accordion title="Get planning guidance" id="guidance-accordion">
        <ul class="flex flex-col gap-4">
          {
            lpaData.guidanceServices.map((service) => (
              <ServiceCard
                service={service}
                team={{ domain: lpaData.domain }}
              />
            ))
          }
        </ul>
      </Accordion>
    </div>
  </Container>
</Layout>

<script is:inline data-astro-rerun type="module">
  /**
   * Open accordion by "action" search param in URL
   * Defaults to all accordions closed
   */
  const openAccordion = () => {
    const urlParams = new URLSearchParams(window.location.search);
    const action = urlParams.get("action");

    if (!action) return;

    const detailsEl = document.getElementById(`${action}-accordion`);
    if (!detailsEl) return;

    detailsEl.open = true;
  };

  document.addEventListener("astro:page-load", () => {
    openAccordion();
  });
</script>
