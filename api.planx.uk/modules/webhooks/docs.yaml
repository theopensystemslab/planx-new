openapi: 3.1.0
info:
  title: Planâœ• API
  version: 0.1.0
tags:
  - name: webhooks
    description: Webhooks for event management
components:
  schemas:
    Payload:
      type: object
      properties:
        sessionId:
          type: string
      required:
        - sessionId
    BopsSubmission:
      type: object
      properties:
        body:
          type: object
          properties:
            event:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    new:
                      type: object
                      properties:
                        session_id:
                          type: string
                        bops_id:
                          type: string
                        destination_url:
                          type: string
      required:
        - body
    UniformSubmission:
      type: object
      properties:
        body:
          type: object
          properties:
            event:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    new:
                      type: object
                      properties:
                        payload:
                          $ref: "#/components/schemas/Payload"
                        submission_reference:
                          type: string
                        response:
                          type: object
                          properties:
                            organisation:
                              type: string
      required:
        - body
    EmailSubmission:
      type: object
      properties:
        body:
          type: object
          properties:
            event:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    new:
                      type: object
                      properties:
                        session_id:
                          type: string
                        team_slug:
                          type: string
                        request:
                          type: object
                          properties:
                            personalisation:
                              type: object
                              properties:
                                serviceName:
                                  type: string
      required:
        - body
    S3Submission:
      type: object
      properties:
        body:
          type: object
          properties:
            event:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    new:
                      type: object
                      properties:
                        session_id:
                          type: string
                        team_slug:
                          type: string
      required:
        - body
    SendSlackNotification:
      oneOf:
        - $ref: "#/components/schemas/BopsSubmission"
        - $ref: "#/components/schemas/UniformSubmission"
        - $ref: "#/components/schemas/EmailSubmission"
        - $ref: "#/components/schemas/S3Submission"
    CreatePaymentEvent:
      type: object
      properties:
        createdAt:
          required: true
          type: string
          format: date-time
        payload:
          required: true
          type: object
          properties:
            paymentRequestId:
              type: string
    CreateSessionEvent:
      type: object
      properties:
        createdAt:
          required: true
          type: string
          format: date-time
        payload:
          required: true
          type: object
          properties:
            sessionId:
              type: string
            email:
              type: string
              format: email
  requests:
    ValidateInputRequest:
      description: |
        Request generated by Hasura input validation

        Docs: [https://hasura.io/docs/latest/schema/postgres/input-validations/#request](https://hasura.io/docs/latest/schema/postgres/input-validations/#request)
      type: object
      required:
        - body
      properties:
        body:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - input
              properties:
                input:
                  type: array
                  items:
                    type: object
                    additionalProperties:
                      type: string
  responses:
    SlackNotificationSuccessMessage:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: string
                required: false
                description: The generated Slack message
              message:
                type: string
                required: true
    ScheduledEvent:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                message:
                  type: string
                  enum: ["success"]
                event_id:
                  type: string
                  description: Internal Hasura ID of the generated event
    OperationResultSuccess:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                operationName:
                  type: string
                status:
                  type: string
                  enum:
                    - success
                count:
                  type: integer
    OperationResultFailure:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                operationName:
                  type: string
                status:
                  type: string
                  enum:
                    - success
                    - failure
                count:
                  type: integer
                errorMessage:
                  type: string
                  required: false
    InputValidationSuccess:
      description: Successful response with no content
    InputValidationFailure:
      description: Input validation failed. Message will be returned to client.
      content:
        application/json:
          example:
            message: Invalid HTML content
          schema:
            type: object
            properties:
              message:
                type: string
                description: A message returned to the client
paths:
  /webhooks/hasura/sendSlackNotification:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Send Slack notification
      description: Endpoint to trigger a Slack notification following a submission event
      parameters:
        - in: query
          name: type
          type: string
          enum: ["bops-submission", "uniform-submission", "email-submission"]
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendSlackNotification"
      responses:
        "200":
          $ref: "#/components/responses/SlackNotificationSuccessMessage"
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /webhooks/hasura/create-payment-invitation-events:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Create payment invitation events
      description: Setup events which will trigger payment invitation emails to be generated
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaymentEvent"
      responses:
        "200":
          $ref: "#/components/responses/ScheduledEvent"
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /webhooks/hasura/create-payment-reminder-events:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Create payment reminder events
      description: Setup events which will trigger payment reminder emails to be generated
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaymentEvent"
      responses:
        "200":
          $ref: "#/components/responses/ScheduledEvent"
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /webhooks/hasura/create-payment-expiry-events:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Create payment expiry events
      description: Setup events which will trigger payment expiry emails to be generated
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaymentEvent"
      responses:
        "200":
          $ref: "#/components/responses/ScheduledEvent"
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /webhooks/hasura/create-reminder-event:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Create session reminder event
      description: Setup events which will trigger session reminder emails to be generated
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSessionEvent"
      responses:
        "200":
          $ref: "#/components/responses/ScheduledEvent"
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /webhooks/hasura/create-expiry-event:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Create session expiry event
      description: Setup events which will trigger session expiry email to be generated
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSessionEvent"
      responses:
        "200":
          $ref: "#/components/responses/ScheduledEvent"
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /webhooks/hasura/sanitise-application-data:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Sanitise application data
      description: Called by Hasura cron job "sanitise_application_data" on a nightly basis
      responses:
        "200":
          $ref: "#/components/responses/OperationResultSuccess"
        "500":
          $ref: "#/components/responses/OperationResultFailure"
  /webhooks/hasura/validate-input/jsonb/clean-html:
    post:
      tags: ["webhooks"]
      security:
        - hasuraAuth: []
      summary: Validate if user-submitted JSONB contains safe HTML
      description: |
        Endpoint called by Hasura on INSERT or UPDATE to a table which containts user-submitted HTML content. 

        Hasura runs a [Postgres Input Validation](https://hasura.io/docs/latest/schema/postgres/input-validations/) call against this endpoint which checks incoming content is clean and valid HTML.

        This endpoint does not sanitise and respond with clean data, it simply accepts or rejects the user-submitted changes.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requests/ValidateInputRequest"
      responses:
        "200":
          $ref: "#/components/responses/InputValidationSuccess"
        "500":
          $ref: "#/components/responses/InputValidationFailure"
