openapi: 3.1.0
info:
  title: Planâœ• API
  version: 0.1.0

tags:
  - name: analytics
  - name: metabase

components:
  responses:
    AnalyticsResponse:
      description: Successful response with no content. Not awaited from server as endpoint is called via the Beacon API

  schemas:
    FilterDashboardLink:
      type: object
      properties:
        flowId:
          type: string
          description: ID of the flow
        teamId:
          type: number
          description: ID of the team
        serviceSlug:
          type: string
          description: Service slug identifier
      required:
        - flowId
        - teamId
        - serviceSlug

paths:
  /analytics/log-user-exit:
    post:
      summary: Log user exit
      description: Capture an analytic event which represents a user exiting a service
      tags:
        - analytics
      responses:
        "204":
          $ref: "#/components/responses/AnalyticsResponse"

  /analytics/log-user-resume:
    post:
      summary: Log user resume
      description: Capture an analytic event which represents a user resuming a service
      tags:
        - analytics
      responses:
        "204":
          $ref: "#/components/responses/AnalyticsResponse"

  /metabase/dashboard:
    post:
      summary: Filter public dashboard link
      description: Filters an existing public dashboard link based on the provided flow ID, team ID, and service slug
      tags:
        - metabase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterDashboardLink"
      responses:
        "200":
          description: Dashboard link filtered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    description: The filtered public dashboard link
        "400":
          description: Bad request or filtering failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
