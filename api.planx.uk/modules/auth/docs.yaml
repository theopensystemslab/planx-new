openapi: 3.1.0
info:
  title: Planâœ• API
  version: 0.1.0
tags:
  - name: auth
    description: Authentication related requests
paths:
  /auth/login/failed:
    get:
      summary: Failed login
      tags: ["auth"]
      responses:
        "401":
          description: Invalid login details
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: ["User failed to authenticate"]
  /auth/logout:
    post:
      summary: Log out of PlanX
      tags: ["auth"]
      responses:
        "200":
          description: OK
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /auth/validate-jwt:
    get:
      summary: Validate JSON web token (JWT)
      description:
        Check the status of a user's JWT. Resolves if not-revoked, rejects if JWT is revoked.
        Used by Hasura proxy in order to check JWT status.
        Full JWT validation and permission checks still carried out by Hasura.
      tags: ["auth"]
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorised
  /auth/google:
    get:
      summary: Authenticate via Google SSO
      description: The first step in Google authentication will involve redirecting the user to google.com
      tags: ["auth"]
      responses:
        "200":
          description: OK
  /auth/google/callback:
    get:
      summary: Generate a JWT for an authenticated user
      description: After authentication, Google will redirect the user back to this route which generates a JWT for the user
      tags: ["auth"]
      responses:
        "200":
          description: OK
  /auth/microsoft:
    get:
      summary: Authenticate via Microsoft SSO
      description: The first step in Microsoft authentication will involve redirecting the user to login.microsoftonline.com
      tags: ["auth"]
      responses:
        "200":
          description: OK
  /auth/microsoft/callback:
    get:
      summary: Generate a JWT for an authenticated user
      description: After authentication, Microsoft will redirect the user back to this route which generates a JWT for the user
      tags: ["auth"]
      responses:
        "200":
          description: OK
