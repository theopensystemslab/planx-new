info:
  title: Planâœ• API
  version: 0.1.0
tags:
  - name: send
components:
  schemas:
    EventSchema:
      type: object
      properties:
        localAuthority:
          type: string
        body:
          type: object
          properties:
            sessionId:
              type: string
              format: uuid
      required:
        - localAuthority
        - body
paths:
  /bops/{localAuthority}:
    post:
      summary: Submits an application to the Back Office Planning System (BOPS)
      description: Submits an application to the Back Office Planning System (BOPS)
      tags:
        - send
      parameters:
        - $ref: "#/components/parameters/localAuthority"
      security:
        - hasuraAuth: []
      requestBody:
        description: This endpoint is only called via Hasura's scheduled event webhook, so body is wrapped in a `payload` key
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionPayload"
  /email-submission/{localAuthority}:
    post:
      summary: Sends an application by email using GOV.UK Notify
      description: Send an application by email using GOV.UK Notify. The email body includes a link to download the application files.
      tags:
        - send
      parameters:
        - $ref: "#/components/parameters/localAuthority"
      security:
        - hasuraAuth: []
      requestBody:
        description: This endpoint is only called via Hasura's scheduled event webhook, so body is wrapped in a `payload` key
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionPayload"
  /uniform/{localAuthority}:
    post:
      summary: Submits an application to Uniform
      description: Submits an application to Uniform
      tags:
        - send
      parameters:
        - $ref: "#/components/parameters/localAuthority"
      security:
        - hasuraAuth: []
      requestBody:
        description: This endpoint is only called via Hasura's scheduled event webhook, so body is wrapped in a `payload` key
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionPayload"
  /create-send-events/{sessionId}:
    post:
      summary: Create send events
      description: Create "One-off Scheduled Events" in Hasura from Send component for selected destinations
      tags:
        - send
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: "#/components/schemas/EventSchema"
                bops:
                  $ref: "#/components/schemas/EventSchema"
                uniform:
                  $ref: "#/components/schemas/EventSchema"
              required:
                - email
                - bops
                - uniform
      parameters:
        - in: query
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
  /download-application-files/{sessionId}:
    get:
      summary: Download application files
      description: Download application files via a link send to a team's "send to email" email address
      tags:
        - send
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
        - in: query
          name: localAuthority
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/DownloadFile"
        "500":
          $ref: "#/components/responses/ErrorMessage"
