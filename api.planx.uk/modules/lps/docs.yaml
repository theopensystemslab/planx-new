openapi: 3.1.0
info:
  title: Planâœ• API
  version: 0.1.0
tags:
  - name: localplanning.services
    description: Endpoints used by the localplanning.services site
components:
  schemas:
    LPSApplication:
      type: object
      required:
        - id
        - service
        - team
        - address
        - createdAt
      properties:
        id:
          type: string
        service:
          type: object
          required:
            - name
            - slug
          properties:
            name:
              type: string
            slug:
              type: string
        team:
          type: object
          required:
            - name
            - slug
            - domain
          properties:
            name:
              type: string
            slug:
              type: string
            domain:
              type: string
              nullable: true
        address:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
    DraftLPSApplication:
      allOf:
        - $ref: "#/components/schemas/LPSApplication"
        - type: object
          required:
            - expiresAt
            - serviceUrl
          properties:
            expiresAt:
              type: string
              format: date-time
            serviceUrl:
              type: string
              format: uri
    SubmittedLPSApplication:
      allOf:
        - $ref: "#/components/schemas/LPSApplication"
        - type: object
          required:
            - submittedAt
          properties:
            submittedAt:
              type: string
              format: date-time
    LoginRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    ApplicationsRequest:
      type: object
      required:
        - email
        - token
      properties:
        email:
          type: string
          format: email
        token:
          type: string
          format: uuid
  responses:
    LoginResponse:
      description: Email sent successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                example: success
    ApplicationsResponse:
      description: Applications retrieved successfully
      content:
        application/json:
          schema:
            type: object
            required:
              - drafts
              - submitted
            properties:
              drafts:
                type: array
                items:
                  $ref: "#/components/schemas/DraftLPSApplication"
              submitted:
                type: array
                items:
                  $ref: "#/components/schemas/SubmittedLPSApplication"
paths:
  /lps/login:
    post:
      tags: [localplanning.services]
      summary: Generate a magic link to log into LPS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          $ref: "#/components/responses/LoginResponse"
        "500":
          $ref: "#/components/responses/ErrorMessage"
  /lps/applications:
    post:
      tags: [localplanning.services]
      summary: Fetch applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationsRequest"
      responses:
        "200":
          $ref: "#/components/responses/ApplicationsResponse"
        "500":
          $ref: "#/components/responses/ErrorMessage"
